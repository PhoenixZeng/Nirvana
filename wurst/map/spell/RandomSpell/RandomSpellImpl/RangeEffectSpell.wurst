package RangeEffectSpell
import RandomSpell
import HashMap
import PassiveDamageDispatcher
import RandomSpellBasicManager

public class NameRangeEffectPair
    static let map = new HashMap<int,thistype>()
    static int printer = 0
    string name
    string art
    string path
    string pathRange

    construct(string name, string art, string path, string pathRange)
        this.name = name
        this.art = art
        this.path = path
        this.pathRange = pathRange
        map.put(printer, this)
        printer ++

    static function get() returns thistype
        return map.get(map.size().toReal().nextInt())
    static function inite()
        new NameRangeEffectPair("圣火裁决","blp\\RangeEffectSpell\\shenghuocaijue.blp","war3mapImported\\[Sepll]LinaSun _T2_Blast.MDX","war3mapImported\\[Sepll]LinaSun _T1_MagicMatrix.mdx")
        new NameRangeEffectPair("冰雪旋风","blp\\RangeEffectSpell\\bingxuexuanfeng.blp","war3mapImported\\AZ_CocoChristmas_D_Impact.mdx","war3mapImported\\AZ_BJF-BZ.MDX")
        new NameRangeEffectPair("黑暗深渊","blp\\RangeEffectSpell\\heianshenyuan.blp","war3mapImported\\AZ_Akasha(2)_B.mdx","war3mapImported\\AZ_BlackSmoke01.mdx")
        new NameRangeEffectPair("青龙降世","blp\\RangeEffectSpell\\qinglongjiangshi.blp","war3mapImported\\AZ_Alleria_R4.mdx","war3mapImported\\AZ_CoCoGuanyu_E1.mdx")
        new NameRangeEffectPair("地狱烈焰","blp\\RangeEffectSpell\\diyulieyan.blp","war3mapImported\\AZ_Doomdragon_V2_Small.md","war3mapImported\\AZ_Doomdragon_D.mdx")
        new NameRangeEffectPair("烈狱突刺","blp\\RangeEffectSpell\\lieyutuci.blp","war3mapImported\\AZ_EarthShaker_F.MDX","war3mapImported\\AZ_CWLava_T.MDX")
        new NameRangeEffectPair("烈焰焚天","blp\\RangeEffectSpell\\lieyanfentian.blp","war3mapImported\\AZ_Kaer_T3.MDX","war3mapImported\\AZ_Firewall.MDX")
        new NameRangeEffectPair("神罚之雷","blp\\RangeEffectSpell\\shenfazhilei.blp","war3mapImported\\AZ_Goods_Blink(3).MDX","war3mapImported\\AZ_Goods_TP_Caster(3).MDX")
        new NameRangeEffectPair("狂雷风暴","blp\\RangeEffectSpell\\kuangleifengbao.blp","war3mapImported\\AZ_LeiJi01-Chen.MDX","war3mapImported\\AZ_Kaer_C.MDX")
        new NameRangeEffectPair("血狱魔蝠","blp\\RangeEffectSpell\\xueyumofu.blp","war3mapImported\\AZ_BaoHunJue.mdx","war3mapImported\\heianluqiya111_V1.MDX")


/*
属性项：
    0：全属性
    1：力量
    2：敏捷
    3：智力
    4：力量+敏捷
    5：力量+智力
    6：敏捷+力量
    7：敏捷+智力
    8：智力+力量
    9：智力+敏捷
*/
public class RangeEffectSpell extends RandomSpell
    string path
    string pathRange
    real range
    Prop prop
    real power
    int  count
    real delay
    PassiveDamageDispatcher  disper

    construct()
        super()

    override function toString() returns string
        return "RangeEffectSpell&"+"art:"+art+"name:"+name+"tip:"+tip + " id:"+id.toIdString()

    override function levelUp() returns bool
        if lv < 10
            lv ++
            power *= 1.2
            makeTip()
            flushSpell()
            registerDispatcher()
            return true
        return false

    function registerDispatcher()
        if disper != null and disper.typeId != 0
            destroy disper
        disper = new PassiveDamageDispatcher(name)
        ..setHurtRange(range)
        ..setHurtDamageThr(power,0)
        ..setAbilCond(id, 20)
        ..setType(UnitDamageType.Spell)
        ..setEffect(pathRange)
        ..setTargetEffect(path, "origin")
        ..setProp(prop)
        if count > 1
            disper..setHurtDelay(delay, count)
    static function getDmgCount() returns int
        if 20 .random()
            return 2
        else if 60 .random()
            return 1
        return (4 .next()).toInt() + 1
    static function getDmgDelay(int count) returns real
        if count <= 4
            return 1 / count
        else
            return 0.25
    function makeTip()
        tip = "有概率造成范围伤害|n品级:"+getLevelName(level)+"|n伤害段数:"+count+"|n伤害间隔:"+delay.toString(2)+"|n威力系数:"+power.toString(2)+"|n关联属性:"+prop.toString()+"|n伤害范围:"+range.toString(2)

    override function initSpell()
        this.level = getLevel()
        randomData()
        makeTip()

    override function randomData()
        let pair = NameRangeEffectPair.get()
        this.name = pair.name
        this.art  = pair.art
        this.path = pair.path
        this.pathRange = pair.pathRange
        this.range = 300 * 1.3 .pow(level - 1.)
        this.prop = (10 .nextInt()) castTo Prop
        switch prop
            case Prop.ALL
                this.power = 1.0 * 1.2 .pow(level - 1.)
            case Prop.STR
                this.power = 2.0 * 1.2 .pow(level - 1.)
            case Prop.AGI
                this.power = 2.0 * 1.2 .pow(level - 1.)
            case Prop.INT
                this.power = 2.0 * 1.2 .pow(level - 1.)
            default
                this.power = 1.5 * 1.2 .pow(level - 1.)
        this.power.float(0.2)
        this.power = power / 5
        this.count = getDmgCount()
        if count > 1
            this.power = power / count
            this.delay = getDmgDelay(count)

    override function onReRandom()
        lv = 1
        this.level = getLevel()
        randomData()
        makeTip()
        flushSpell()
        registerDispatcher()


    override function onApply(Hero u)
        if id == 0
            id = RandomSpellBasicManager.get()
        this.u = u
        u._self.addAbilityPro(id)
        flushSpell()
        registerDispatcher()
    override function onRemove()
        u._self.removeAbility(id)
        destroy disper

@test function aa()
    NameRangeEffectPair.inite()
    for i = 1 to 10
        let a = new RangeEffectSpell()
        a.initSpell()
        if a != null
            print("id:"+a.id.toIdString())
            print("name:"+a.name)
            print("art:"+a.art)
            print("path:"+a.path)
            print("pathRange:"+a.pathRange)
            print("tip:"+a.tip)
