package maths

string codinglist = "_vY<FH).uPbmpK/I*n8+@Qe^d!1$f3E(SkX]'D>oq6R-Blw[iAr`}L,{V=t?y;Whgj#&\\a72\"NJUCMs~TZ0zGO94c:5x| "
// string codinglist = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!=\"#$&'()*+,-./:;<>?@[\\]^_`{|}~ "

//94进制编码
public function coding (string str) returns int
    let a = codinglist.indexOf(str)
    return a < 0 ? 0 : a
    // if(str=="0")
    //     return 0
    // else if(str=="1")
    //     return 1
    // else if(str=="2")
    //     return 2
    // else if(str=="3")
    //     return 3
    // else if(str=="4")
    //     return 4
    // else if(str=="5")
    //     return 5
    // else if(str=="6")
    //     return 6
    // else if(str=="7")
    //     return 7
    // else if(str=="8")
    //     return 8
    // else if(str=="9")
    //     return 9
    // else if(str=="A")
    //     return 10
    // else if(str=="B")
    //     return 11
    // else if(str=="C")
    //     return 12
    // else if(str=="D")
    //     return 13
    // else if(str=="E")
    //     return 14
    // else if(str=="F")
    //     return 15
    // else if(str=="G")
    //     return 16
    // else if(str=="H")
    //     return 17
    // else if(str=="I")
    //     return 18
    // else if(str=="J")
    //     return 19
    // else if(str=="K")
    //     return 20
    // else if(str=="L")
    //     return 21
    // else if(str=="M")
    //     return 22
    // else if(str=="N")
    //     return 23
    // else if(str=="O")
    //     return 24
    // else if(str=="P")
    //     return 25
    // else if(str=="Q")
    //     return 26
    // else if(str=="R")
    //     return 27
    // else if(str=="S")
    //     return 28
    // else if(str=="T")
    //     return 29
    // else if(str=="U")
    //     return 30
    // else if(str=="V")
    //     return 31
    // else if(str=="W")
    //     return 32
    // else if(str=="X")
    //     return 33
    // else if(str=="Y")
    //     return 34
    // else if(str=="Z")
    //     return 35
    // else if(str=="a")
    //     return 36
    // else if(str=="b")
    //     return 37
    // else if(str=="c")
    //     return 38
    // else if(str=="d")
    //     return 39
    // else if(str=="e")
    //     return 40
    // else if(str=="f")
    //     return 41
    // else if(str=="g")
    //     return 42
    // else if(str=="h")
    //     return 43
    // else if(str=="i")
    //     return 44
    // else if(str=="j")
    //     return 45
    // else if(str=="k")
    //     return 46
    // else if(str=="l")
    //     return 47
    // else if(str=="m")
    //     return 48
    // else if(str=="n")
    //     return 49
    // else if(str=="o")
    //     return 50
    // else if(str=="p")
    //     return 51
    // else if(str=="q")
    //     return 52
    // else if(str=="r")
    //     return 53
    // else if(str=="s")
    //     return 54
    // else if(str=="t")
    //     return 55
    // else if(str=="u")
    //     return 56
    // else if(str=="v")
    //     return 57
    // else if(str=="w")
    //     return 58
    // else if(str=="x")
    //     return 59
    // else if(str=="y")
    //     return 60
    // else if(str=="z")
    //     return 61
    // else if(str=="!")
    //     return 62
    // else if(str=="=")
    //     return 63
    // else if(str=="\"")
    //     return 64
    // else if(str=="#")
    //     return 65
    // else if(str=="$")
    //     return 66
    // else if(str=="&")
    //     return 67
    // else if(str=="'")
    //     return 68
    // else if(str=="(")
    //     return 69
    // else if(str==")")
    //     return 70
    // else if(str=="*")
    //     return 71
    // else if(str=="+")
    //     return 72
    // else if(str==",")
    //     return 73
    // else if(str=="-")
    //     return 74
    // else if(str==".")
    //     return 75
    // else if(str=="/")
    //     return 76
    // else if(str==":")
    //     return 77
    // else if(str==";")
    //     return 78
    // else if(str=="<")
    //     return 79
    // else if(str==">")
    //     return 80
    // else if(str=="?")
    //     return 81
    // else if(str=="@")
    //     return 82
    // else if(str=="[")
    //     return 83
    // else if(str=="\\")
    //     return 84
    // else if(str=="]")
    //     return 85
    // else if(str=="^")
    //     return 86
    // else if(str=="_")
    //     return 87
    // else if(str=="`")
    //     return 88
    // else if(str=="{")
    //     return 89
    // else if(str=="|")
    //     return 90
    // else if(str=="}")
    //     return 91
    // else if(str=="~")
    //     return 92
    // else if(str==" ")
    //     return 93
    // else
    //     return 0
    


//10转94进制最多5次方为94^4*27，约21亿，最多占用5位。bit等于编码位数，1-5
//使用i2的好处在于不需要截取字段，使用i则需要。包括补位。
//长字段编码解码需根据情况获取。
public function c10to94 (int val, int bit     )returns string
    int i = val
    int _i2 = bit-1
    int _i3 = 0
    string str = ""
    while not _i2 < 0
        _i3 = R2I(Pow(94,I2R(_i2))) 
        if(i >= _i3)
            str = str + SubString(codinglist,i div _i3,i div _i3+1)        
            i = i - (i div _i3*_i3)
        else
            str = str + codinglist.charAt(0)
        _i2 = _i2 - 1        
    
    return str


//94转10进制，最长5位
public function c94to10 (string str )returns int
    int i = StringLength(str)
    int i2 = i
    int i3 = 0
    while not i <= 0
        i3 = i3 + R2I(Pow(94,I2R(i-1))) * coding(SubString(str,i2-i,i2-i+1))
        i = i - 1
    return i3


//固定为6位二进制，10进制转为二进制。
public function c64v10to2 (int val     )returns string
    string str = ""
    int i = val
    while not i < 1
        if (i.moduloInt(2) == 0) 
            str = "0" + str
        else
            str = "1" + str
        
        i = i div 2
    
    return SubString("000000" + str,StringLength(str),6+StringLength(str))

//二进制补位在前面，每组不足6个自动添加6-N个0
public function c64to2 (string str     )returns string
    int i1 = 0
    int i2 = StringLength(str)
    string codstr = ""
    while not i1 >= i2
        codstr = c64v10to2(coding(SubString(str,i1,i1+1))) + codstr
        i1 = i1 + 1
   
    return codstr

//固定为6位二进制，二进制转为10进制
public function c2to64v10 (string str     )returns int
    int i1 = StringLength(str)
    int i2 = i1
    real val = 0.00
    while not i1 <= 0
        if(SubString(str,i1-1,i1) == "1")
        val = val + Pow(2,I2R(i2-i1))
        
        i1 = i1 - 1
   
    return R2I(val)

public function c2to64 (string str)returns string
    int i1 = StringLength(str)
    int _i2 = 0
    int _i3 = 0
    string codstr = ""
    while not i1 < 1
        _i3 = c2to64v10(SubString(str,i1-6,i1))
        codstr =  codstr + SubString(codinglist,_i3,_i3+1)
        i1 = i1 - 6
    return codstr


